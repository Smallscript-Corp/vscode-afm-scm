{
  "name": "afm",
  "publisher": "smallscript",
  "displayName": "Afm",
  "description": "Integrated Afm source control",
  "galleryBanner": {
    "color": "#999999",
    "theme": "dark"
  },
  "homepage": "https://github.com/Smallscript-Corp/vscode-afm-scm",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Smallscript-Corp/vscode-afm-scm.git"
  },
  "bugs": {
    "url": "https://github.com/Smallscript-Corp/vscode-afm-scm/issues"
  },
  "version": "0.0.19",
  "engines": {
    "vscode": "^1.23.0"
  },
  "keywords": [
    "afm-scm",
    "afm",
    "source",
    "scm"
  ],
  "icon": "icon.png",
  "enableProposedApi": false,
  "categories": [
    "SCM Providers",
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/main",
  "contributes": {
    "commands": [
      {
        "command": "afm.add",
        "title": "%command.add%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/add.svg",
          "dark": "resources/icons/dark/add.svg"
        }
      },
      {
        "command": "afm.addAll",
        "title": "%command.addAll%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/add.svg",
          "dark": "resources/icons/dark/add.svg"
        }
      },
      {
        "command": "afm.ignore",
        "title": "%command.ignore%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/discard.svg",
          "dark": "resources/icons/dark/discard.svg"
        }
      },
      {
        "command": "afm.branch",
        "title": "%command.branch%",
        "category": "Afm"
      },
      {
        "command": "afm.clean",
        "title": "%command.clean%",
        "category": "Afm"
      },
      {
        "command": "afm.revert",
        "title": "%command.revert%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/discard.svg",
          "dark": "resources/icons/dark/discard.svg"
        }
      },
      {
        "command": "afm.revertAll",
        "title": "%command.revertAll%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/discard.svg",
          "dark": "resources/icons/dark/discard.svg"
        }
      },
      {
        "command": "afm.commit",
        "title": "%command.commit%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/check.svg",
          "dark": "resources/icons/dark/check.svg"
        }
      },
      {
        "command": "afm.commitAll",
        "title": "%command.commitAll%",
        "category": "Afm"
      },
      {
        "command": "afm.commitStaged",
        "title": "%command.commitStaged%",
        "category": "Afm"
      },
      {
        "command": "afm.clone",
        "title": "%command.clone%",
        "category": "Afm"
      },
      {
        "command": "afm.fileLog",
        "title": "%command.fileLog%",
        "category": "Afm"
      },
      {
        "command": "afm.remove",
        "title": "%command.forget%",
        "category": "Afm"
      },
      {
        "command": "afm.init",
        "title": "%command.init%",
        "category": "Afm",
        "icon": {
          "light": "icon.png",
          "dark": "icon.png"
        }
      },
      {
        "command": "afm.close",
        "title": "%command.close%",
        "category": "Afm"
      },
      {
        "command": "afm.log",
        "title": "%command.log%",
        "category": "Afm"
      },
      {
        "command": "afm.logBranch",
        "title": "%command.logBranch%",
        "category": "Afm"
      },
      {
        "command": "afm.logDefault",
        "title": "%command.logDefault%",
        "category": "Afm"
      },
      {
        "command": "afm.logRepo",
        "title": "%command.logRepo%",
        "category": "Afm"
      },
      {
        "command": "afm.markResolved",
        "title": "%command.markResolved%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/check.svg",
          "dark": "resources/icons/dark/check.svg"
        }
      },
      {
        "command": "afm.mergeHeads",
        "title": "%command.mergeHeads%",
        "category": "Afm"
      },
      {
        "command": "afm.mergeWithLocal",
        "title": "%command.mergeWithLocal%",
        "category": "Afm"
      },
      {
        "command": "afm.openChange",
        "title": "%command.openChange%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/open-change.svg",
          "dark": "resources/icons/dark/open-change.svg"
        }
      },
      {
        "command": "afm.openChangeFromUri",
        "title": "%command.openChange%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/open-change.svg",
          "dark": "resources/icons/dark/open-change.svg"
        }
      },
      {
        "command": "afm.openFile",
        "title": "%command.openFile%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/open-file.svg",
          "dark": "resources/icons/dark/open-file.svg"
        }
      },
      {
        "command": "afm.openFiles",
        "title": "%command.openFiles%",
        "category": "Afm"
      },
      {
        "command": "afm.openFileFromUri",
        "title": "%command.openFile%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/open-file.svg",
          "dark": "resources/icons/dark/open-file.svg"
        }
      },
      {
        "command": "afm.openui",
        "title": "%command.openui%",
        "category": "Afm"
      },
      {
        "command": "afm.pull",
        "title": "%command.pull%",
        "category": "Afm"
      },
      {
        "command": "afm.push",
        "title": "%command.push%",
        "category": "Afm"
      },
      {
        "command": "afm.pushTo",
        "title": "%command.pushTo%",
        "category": "Afm"
      },
      {
        "command": "afm.refresh",
        "title": "%command.refresh%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/refresh.svg",
          "dark": "resources/icons/dark/refresh.svg"
        }
      },
      {
        "command": "afm.resolveAgain",
        "title": "%command.resolveAgain%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/refresh.svg",
          "dark": "resources/icons/dark/refresh.svg"
        }
      },
      {
        "command": "afm.showOutput",
        "title": "%command.showOutput%",
        "category": "Afm"
      },
      {
        "command": "afm.stage",
        "title": "%command.stage%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/add.svg",
          "dark": "resources/icons/dark/add.svg"
        }
      },
      {
        "command": "afm.stageAll",
        "title": "%command.stageAll%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/add.svg",
          "dark": "resources/icons/dark/add.svg"
        }
      },
      {
        "command": "afm.undo",
        "title": "%command.undo%",
        "category": "Afm"
      },
      {
        "command": "afm.unresolve",
        "title": "%command.unresolve%",
        "category": "Afm"
      },
      {
        "command": "afm.unstage",
        "title": "%command.unstage%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/unstage.svg",
          "dark": "resources/icons/dark/unstage.svg"
        }
      },
      {
        "command": "afm.unstageAll",
        "title": "%command.unstageAll%",
        "category": "Afm",
        "icon": {
          "light": "resources/icons/light/unstage.svg",
          "dark": "resources/icons/dark/unstage.svg"
        }
      },
      {
        "command": "afm.update",
        "title": "%command.update%",
        "category": "Afm"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "afm.clone",
          "when": "config.afm.enabled"
        },
        {
          "command": "afm.init",
          "when": "config.afm.enabled"
        },
        {
          "command": "afm.openui",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.refresh",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.openChange",
          "when": "false"
        },
        {
          "command": "afm.openFile",
          "when": "false"
        },
        {
          "command": "afm.openFiles",
          "when": "false"
        },
        {
          "command": "afm.openChangeFromUri",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.openFileFromUri",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.stageAll",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.unstage",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.unstageAll",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.revert",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.revertAll",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.commit",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.commitStaged",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.commitAll",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.undo",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.update",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.branch",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.pull",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.push",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.pushTo",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.mergeHeads",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.mergeWithLocal",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.showOutput",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.fileLog",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.log",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.logBranch",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.logDefault",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        },
        {
          "command": "afm.logRepo",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0"
        }
      ],
      "scm/title": [
        {
          "command": "afm.init",
          "group": "navigation",
          "when": "config.afm.enabled && scmProvider == '' && afmOpenRepositoryCount == 0"
        },
        {
          "command": "afm.commit",
          "group": "navigation",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.refresh",
          "group": "navigation",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.pull",
          "group": "1_sync",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.push",
          "group": "1_sync",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.pushTo",
          "group": "1_sync",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.commitStaged",
          "group": "3_commit",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.commitAll",
          "group": "3_commit",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.undo",
          "group": "3_commit",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.unstageAll",
          "group": "4_stage",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.revertAll",
          "group": "4_stage",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.clean",
          "group": "4_stage",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.mergeHeads",
          "group": "5_merge",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.mergeWithLocal",
          "group": "5_merge",
          "when": "config.afm.enabled && scmProvider == afm"
        },
        {
          "command": "afm.showOutput",
          "group": "6_output",
          "when": "config.afm.enabled && scmProvider == afm"
        }
      ],
      "scm/sourceControl": [
        {
          "command": "afm.close",
          "group": "navigation",
          "when": "config.afm.enabled && scmProvider == afm"
        }
      ],
      "scm/resourceGroup/context": [
        {
          "command": "afm.unstageAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "1_modification"
        },
        {
          "command": "afm.unstageAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "inline"
        },
        {
          "command": "afm.revertAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.stageAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.stageAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.revertAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.addAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.clean",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.addAll",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "inline"
        },
        {
          "command": "afm.openFiles",
          "when": "config.afm.enabled && scmProvider == afm",
          "group": "navigation"
        },
        {
          "command": "afm.openChange",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup != untracked",
          "group": "navigation"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "afm.unresolve",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == merge",
          "group": "1_modification"
        },
        {
          "command": "afm.openChange",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "navigation"
        },
        {
          "command": "afm.unstage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "1_modification"
        },
        {
          "command": "afm.unstage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "inline"
        },
        {
          "command": "afm.openChange",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "navigation"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.revert",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.revert",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.add",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "inline"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.ignore",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.openFiles",
          "when": "config.afm.enabled && scmProvider == afm",
          "group": "navigation"
        },
        {
          "command": "afm.remove",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "2_modification"
        }
      ],
      "scm/resourceFolder/context": [
        {
          "command": "afm.unstage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "1_modification"
        },
        {
          "command": "afm.unstage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == staging",
          "group": "inline"
        },
        {
          "command": "afm.revert",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "1_modification"
        },
        {
          "command": "afm.stage",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.revert",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == working",
          "group": "inline"
        },
        {
          "command": "afm.add",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.clean",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "1_modification"
        },
        {
          "command": "afm.add",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup == untracked",
          "group": "inline"
        },
        {
          "command": "afm.openFiles",
          "when": "config.afm.enabled && scmProvider == afm",
          "group": "navigation"
        },
        {
          "command": "afm.openChange",
          "when": "config.afm.enabled && scmProvider == afm && scmResourceGroup != untracked",
          "group": "navigation"
        }
      ],
      "editor/title": [
        {
          "command": "afm.openFileFromUri",
          "group": "navigation",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0 && isInDiffEditor && resourceScheme != extension && scmProvider == afm"
        },
        {
          "command": "afm.openChangeFromUri",
          "group": "navigation",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0 && !isInDiffEditor && resourceScheme == file && scmProvider == afm"
        },
        {
          "command": "afm.fileLog",
          "when": "config.afm.enabled && afmOpenRepositoryCount != 0 && !isInDiffEditor"
        }
      ]
    },
    "configuration": {
      "title": "Afm",
      "properties": {
        "afm.enabled": {
          "type": "boolean",
          "description": "%config.enabled%",
          "default": true
        },
        "afm.autoInOutInterval": {
          "type": "number",
          "description": "%config.autoInOutInterval%",
          "default": 180
        },
        "afm.autoRefresh": {
          "type": "boolean",
          "description": "%config.autoRefresh%",
          "default": true
        },
        "afm.autoUpdate": {
          "type": "boolean",
          "description": "%config.autoUpdate%",
          "default": true
        },
        "afm.path": {
          "type": [
            "string",
            "null"
          ],
          "description": "%config.path%",
          "default": null,
          "isExecutable": true
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p ./",
    "compile": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install"
  },
  "dependencies": {
    "@types/mocha": "^5.2.7",
    "tmp": "0.0.31",
    "vscode-nls": "^2.0.1"
  },
  "devDependencies": {
    "@types/node": "^7.0.4",
    "@types/tmp": "0.0.33",
    "vscode": "^1.1.23"
  },
  "__metadata": {
    "id": "bdda3a72-ac29-4d12-9587-5599332382b9",
    "publisherDisplayName": "Smallscript",
    "publisherId": "365f16b8-6d88-4369-9a2b-240994c0cb15"
  }
}
